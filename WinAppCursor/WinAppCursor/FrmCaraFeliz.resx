<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        JX8w/D9oAOzPbT3QASt/lJ7oAIGPzUwAW4AP/9k=
</value>
  </data>
</root>